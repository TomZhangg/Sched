; ModuleID = 'Schedch'

%struct.Array = type { i32, %struct.Array_element*, %struct.Array_element*, i32 }
%struct.Array_element = type { %struct.Array_element*, %struct.Array_element*, i8* }
%struct.time = type { i32, i32, i32, i32, i32, i32 }

@fmt = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@0 = private unnamed_addr constant [5 x i8] c"\22hi\22\00"
@1 = private unnamed_addr constant [8 x i8] c"\22there\22\00"
@2 = private unnamed_addr constant [8 x i8] c"\22buddy\22\00"

declare i32 @printf(i8*, ...)

declare %struct.Array* @arr_init()

declare %struct.Array* @arr_set_contains_struct(%struct.Array*)

declare %struct.Array_element* @arr_append(%struct.Array*, i8*)

declare %struct.Array_element* @arr_get(%struct.Array*, i32)

declare %struct.Array_element* @arr_set(%struct.Array*, i8*, i32)

declare i32 @arr_length(%struct.Array*)

declare i32 @arr_contains(%struct.Array*, i8*)

declare %struct.time* @time_init(i32, i32, i32, i32, i32, i32)

define i32 @main() {
entry:
  %i = alloca %struct.Array*
  %arr_init = call %struct.Array* @arr_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data = bitcast i8* %malloccall to i32*
  store i32 1, i32* %data
  %data1 = bitcast i32* %data to i8*
  %arr_append = call %struct.Array_element* @arr_append(%struct.Array* %arr_init, i8* %data1)
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data3 = bitcast i8* %malloccall2 to i32*
  store i32 2, i32* %data3
  %data4 = bitcast i32* %data3 to i8*
  %arr_append5 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init, i8* %data4)
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data7 = bitcast i8* %malloccall6 to i32*
  store i32 3, i32* %data7
  %data8 = bitcast i32* %data7 to i8*
  %arr_append9 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init, i8* %data8)
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data11 = bitcast i8* %malloccall10 to i32*
  store i32 -4, i32* %data11
  %data12 = bitcast i32* %data11 to i8*
  %arr_append13 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init, i8* %data12)
  store %struct.Array* %arr_init, %struct.Array** %i
  %i14 = load %struct.Array*, %struct.Array** %i
  %arr_get = call %struct.Array_element* @arr_get(%struct.Array* %i14, i32 0)
  %data15 = bitcast %struct.Array_element* %arr_get to i32*
  %data16 = load i32, i32* %data15
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %data16)
  %i17 = load %struct.Array*, %struct.Array** %i
  %len = call i32 @arr_length(%struct.Array* %i17)
  %printf18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %len)
  %f = alloca %struct.Array*
  %arr_init19 = call %struct.Array* @arr_init()
  %malloccall20 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %data21 = bitcast i8* %malloccall20 to double*
  store double 1.500000e+00, double* %data21
  %data22 = bitcast double* %data21 to i8*
  %arr_append23 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init19, i8* %data22)
  %malloccall24 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %data25 = bitcast i8* %malloccall24 to double*
  store double 2.010000e+00, double* %data25
  %data26 = bitcast double* %data25 to i8*
  %arr_append27 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init19, i8* %data26)
  %malloccall28 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %data29 = bitcast i8* %malloccall28 to double*
  store double 1.000000e+00, double* %data29
  %data30 = bitcast double* %data29 to i8*
  %arr_append31 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init19, i8* %data30)
  %malloccall32 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %data33 = bitcast i8* %malloccall32 to double*
  store double -3.000000e+00, double* %data33
  %data34 = bitcast double* %data33 to i8*
  %arr_append35 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init19, i8* %data34)
  store %struct.Array* %arr_init19, %struct.Array** %f
  %f36 = load %struct.Array*, %struct.Array** %f
  %arr_get37 = call %struct.Array_element* @arr_get(%struct.Array* %f36, i32 1)
  %data38 = bitcast %struct.Array_element* %arr_get37 to double*
  %data39 = load double, double* %data38
  %printf40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double %data39)
  %f41 = load %struct.Array*, %struct.Array** %f
  %len42 = call i32 @arr_length(%struct.Array* %f41)
  %printf43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %len42)
  %s = alloca %struct.Array*
  %arr_init44 = call %struct.Array* @arr_init()
  %malloccall45 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %data46 = bitcast i8* %malloccall45 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %data46
  %data47 = bitcast i8** %data46 to i8*
  %arr_append48 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init44, i8* %data47)
  %malloccall49 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %data50 = bitcast i8* %malloccall49 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i8** %data50
  %data51 = bitcast i8** %data50 to i8*
  %arr_append52 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init44, i8* %data51)
  %malloccall53 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %data54 = bitcast i8* %malloccall53 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i32 0, i32 0), i8** %data54
  %data55 = bitcast i8** %data54 to i8*
  %arr_append56 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init44, i8* %data55)
  store %struct.Array* %arr_init44, %struct.Array** %s
  %s57 = load %struct.Array*, %struct.Array** %s
  %arr_get58 = call %struct.Array_element* @arr_get(%struct.Array* %s57, i32 2)
  %data59 = bitcast %struct.Array_element* %arr_get58 to i8**
  %data60 = load i8*, i8** %data59
  %printf61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* %data60)
  %s62 = load %struct.Array*, %struct.Array** %s
  %len63 = call i32 @arr_length(%struct.Array* %s62)
  %printf64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %len63)
  %b = alloca %struct.Array*
  %arr_init65 = call %struct.Array* @arr_init()
  %malloccall66 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %data67 = bitcast i8* %malloccall66 to i1*
  store i1 true, i1* %data67
  %data68 = bitcast i1* %data67 to i8*
  %arr_append69 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init65, i8* %data68)
  %malloccall70 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %data71 = bitcast i8* %malloccall70 to i1*
  store i1 false, i1* %data71
  %data72 = bitcast i1* %data71 to i8*
  %arr_append73 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init65, i8* %data72)
  %malloccall74 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %data75 = bitcast i8* %malloccall74 to i1*
  store i1 true, i1* %data75
  %data76 = bitcast i1* %data75 to i8*
  %arr_append77 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init65, i8* %data76)
  %malloccall78 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %data79 = bitcast i8* %malloccall78 to i1*
  store i1 true, i1* %data79
  %data80 = bitcast i1* %data79 to i8*
  %arr_append81 = call %struct.Array_element* @arr_append(%struct.Array* %arr_init65, i8* %data80)
  store %struct.Array* %arr_init65, %struct.Array** %b
  %b82 = load %struct.Array*, %struct.Array** %b
  %arr_get83 = call %struct.Array_element* @arr_get(%struct.Array* %b82, i32 0)
  %data84 = bitcast %struct.Array_element* %arr_get83 to i1*
  %data85 = load i1, i1* %data84
  %printf86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i1 %data85)
  %b87 = load %struct.Array*, %struct.Array** %b
  %len88 = call i32 @arr_length(%struct.Array* %b87)
  %printf89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %len88)
  ret i32 0
}

declare noalias i8* @malloc(i32)
