; ModuleID = 'Schedch'

%struct.Array = type { i32, %struct.Array_element*, %struct.Array_element*, i32 }
%struct.Array_element = type { %struct.Array_element*, %struct.Array_element*, i8* }
%struct.time = type { i32, i32, i32, i32, i32, i32 }

@fmt = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@0 = private unnamed_addr constant [5 x i8] c"\22hi\22\00"
@1 = private unnamed_addr constant [14 x i8] c"\22here we go!\22\00"
@2 = private unnamed_addr constant [9 x i8] c"\22sweeet\22\00"

declare i32 @printf(i8*, ...)

declare %struct.Array* @arr_init()

declare %struct.Array* @arr_set_contains_struct(%struct.Array*)

declare %struct.Array_element* @arr_append(%struct.Array*, i8*)

declare %struct.Array_element* @arr_get(%struct.Array*, i32)

declare %struct.Array_element* @arr_set(%struct.Array*, i8*, i32)

declare i32 @arr_length(%struct.Array*)

declare i32 @arr_contains(%struct.Array*, i8*)

declare %struct.time* @time_init(i32, i32, i32, i32, i32, i32)

define i32 @main() {
entry:
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %while_body, %entry
  %i2 = load i32, i32* %i
  %tmp3 = icmp slt i32 %i2, 2
  br i1 %tmp3, label %while_body, label %merge

while_body:                                       ; preds = %while
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0))
  %i1 = load i32, i32* %i
  %tmp = add i32 %i1, 1
  store i32 %tmp, i32* %i
  br label %while

merge:                                            ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %merge
  %j9 = load i32, i32* %j
  %tmp10 = icmp slt i32 %j9, 2
  br i1 %tmp10, label %while_body5, label %merge11

while_body5:                                      ; preds = %while4
  %j6 = load i32, i32* %j
  %tmp7 = add i32 %j6, 2
  store i32 %tmp7, i32* %j
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1, i32 0, i32 0))
  br label %while4

merge11:                                          ; preds = %while4
  %j12 = load i32, i32* %j
  %tmp13 = icmp eq i32 %j12, 2
  br i1 %tmp13, label %then, label %else

merge14:                                          ; preds = %else, %then
  ret i32 0

then:                                             ; preds = %merge11
  %printf15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0))
  br label %merge14

else:                                             ; preds = %merge11
  br label %merge14
}
