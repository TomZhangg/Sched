; ModuleID = 'Schedch'

@fmt = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@0 = private unnamed_addr constant [15 x i8] c"\22loop working\22\00"
@1 = private unnamed_addr constant [15 x i8] c"\22moving along\22\00"
@2 = private unnamed_addr constant [9 x i8] c"\22sweeet\22\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %while_body, %entry
  %i2 = load i32, i32* %i
  %tmp3 = icmp slt i32 %i2, 2
  br i1 %tmp3, label %while_body, label %merge

while_body:                                       ; preds = %while
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @0, i32 0, i32 0))
  %i1 = load i32, i32* %i
  %tmp = add i32 %i1, 1
  store i32 %tmp, i32* %i
  br label %while

merge:                                            ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  %k = alloca i32
  %j4 = load i32, i32* %j
  store i32 %j4, i32* %k
  br label %while5

while5:                                           ; preds = %while_body6, %merge
  %j12 = load i32, i32* %j
  %tmp13 = icmp slt i32 %j12, 2
  br i1 %tmp13, label %while_body6, label %merge14

while_body6:                                      ; preds = %while5
  %j7 = load i32, i32* %j
  %tmp8 = add i32 %j7, 1
  store i32 %tmp8, i32* %j
  %k9 = load i32, i32* %k
  %tmp10 = add i32 %k9, 2
  store i32 %tmp10, i32* %k
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i32 0, i32 0))
  br label %while5

merge14:                                          ; preds = %while5
  %k15 = load i32, i32* %k
  %tmp16 = icmp eq i32 %k15, 4
  br i1 %tmp16, label %then, label %else

merge17:                                          ; preds = %else, %then
  ret i32 0

then:                                             ; preds = %merge14
  %printf18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0))
  br label %merge17

else:                                             ; preds = %merge14
  br label %merge17
}
